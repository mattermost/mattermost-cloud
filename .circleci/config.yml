version: 2.1

orbs:
  generic-ci: mattermost/generic-ci@volatile

executors:
  default:
    docker:
    - image: circleci/golang:1.12

aliases:
- &restore_cache
  restore_cache:
    key: go-mod-v1-{{ checksum "go.sum" }}
- &save_cache
  save_cache:
    key: go-mod-v1-{{ checksum "go.sum" }}
    paths:
    - "/go/pkg/mod"

jobs:
  check-style:
    executor:
      name: default
    steps:
    - checkout
    - *restore_cache
    - run: make check-style
    - *save_cache
  test-sqlite:
    executor:
      name: default
    steps:
    - checkout
    - *restore_cache
    - run: |
        go get golang.org/x/tools/cmd/cover
        go get github.com/mattn/goveralls
    - run: go test ./... -v -covermode=count -coverprofile=coverage.out
    - *save_cache
    - run:
        name: coveralls
        command: goveralls -coverprofile=coverage.out -service=circle-ci -repotoken $COVERALLS_REPO_TOKEN
  test-postgres:
    docker:
    - image: circleci/golang:1.12
      environment:
        CLOUD_DATABASE=postgres://cloud_test@localhost:5432/cloud_test?sslmode=disable
    - image: circleci/postgres:11.2-alpine
      environment:
        POSTGRES_USER: cloud_test
        POSTGRES_DB: cloud_test
    executor:
      name: default
    steps:
    - run:
        name: Waiting for Postgres to be ready
        command: |
          for i in `seq 1 10`;
          do
            nc -z localhost 5432 && echo Success && exit 0
            echo -n .
            sleep 1
          done
          echo Failed waiting for Postgres && exit 1
    - checkout
    - *restore_cache
    - run: go test ./...
    - *save_cache

  build:
    executor:
      name: default
    steps:
    - checkout
    - *restore_cache
    - run: make dist
    - persist_to_workspace:
        root: dist
        paths:
          - "*.tar.gz"
          - "*.zip"

  deploy-master:
    docker:
    - image: circleci/python:2.7
    steps:
      - attach_workspace:
          at: dist
      - run: ls -la dist
      - generic-ci/deploy-s3:
          folder: "dist"
          bucket: "s3://mattermost-cloud-releases/master/"

  deploy-release:
    docker:
    - image: circleci/python:2.7
    steps:
    - attach_workspace:
        at: dist
    - generic-ci/deploy-s3:
        folder: "dist"
        bucket: "s3://mattermost-cloud-releases/$CIRCLE_TAG/"

workflows:
  version: 2
  ci-build:
    jobs:
    - check-style
    - test-sqlite
    - test-postgres
  tagged-build:
    jobs:
    - check-style:
        filters:
          branches:
            only: master
          tags:
            only: /^v.*/
    - test-sqlite:
        filters:
          branches:
            only: master
          tags:
            only: /^v.*/
    - test-postgres:
        filters:
          branches:
            only: master
          tags:
            only: /^v.*/
    - build:
        filters:
          branches:
            only: master
          tags:
            only: /^v.*/
        requires:
        - check-style
        - test-sqlite
        - test-postgres
    - deploy-master:
        filters:
          branches:
            only: master
        context: mattermost-cloud-ci
        requires:
        - build
    - deploy-release:
        filters:
          tags:
            only: /^v.*/
          branches:
            ignore: /.*/
        context: mattermost-cloud-ci
        requires:
        - build
