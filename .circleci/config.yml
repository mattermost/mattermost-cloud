version: 2.1
executors:
  default:
    docker:
      - image: circleci/golang:1.12

aliases:
  - &restore_cache
    restore_cache:
      key: go-mod-v1-{{ checksum "go.sum" }}
  - &save_cache
    save_cache:
      key: go-mod-v1-{{ checksum "go.sum" }}
      paths:
        - "/go/pkg/mod"

jobs:
  lint:
    executor:
      name: default
    steps:
      - checkout
      - *restore_cache
      - run: go get -u golang.org/x/lint/golint
      - run: golint -set_exit_status ./...
      - *save_cache
  vet:
    executor:
      name: default
    steps:
      - checkout
      - *restore_cache
      - run: go vet ./...
      - *save_cache
  test-sqlite:
    executor:
      name: default
    steps:
      - checkout
      - *restore_cache
      - run: |
          go get golang.org/x/tools/cmd/cover
          go get github.com/mattn/goveralls
      - run: go test ./... -v -covermode=count -coverprofile=coverage.out
      - *save_cache
      - run:
          name: coveralls
          command: goveralls -coverprofile=coverage.out -service=circle-ci -repotoken $COVERALLS_REPO_TOKEN
  test-postgres:
    docker:
      - image: circleci/golang:1.12
        environment:
          CLOUD_DATABASE=postgres://cloud_test@localhost:5432/cloud_test?sslmode=disable
      - image: circleci/postgres:11.2-alpine
        environment:
          POSTGRES_USER: cloud_test
          POSTGRES_DB: cloud_test
    executor:
      name: default
    steps:
      - run:
          name: Waiting for Postgres to be ready
          command: |
            for i in `seq 1 10`;
            do
              nc -z localhost 5432 && echo Success && exit 0
              echo -n .
              sleep 1
            done
            echo Failed waiting for Postgres && exit 1
      - checkout
      - *restore_cache
      - run: go test ./...
      - *save_cache

workflows:
  version: 2
  untagged-build:
    jobs:
      - lint
      - vet
      - test-sqlite
      - test-postgres
