## Global Docker image parameters
## Please, note that this will override the image parameters, including dependencies, configured to use the global value
## Current available global Docker image parameters: imageRegistry, and imagePullSecrets
##
# global:
#   imageRegistry: myRegistryName
#   imagePullSecrets:
#     - myRegistryKeySecretName
#   storageClass: myStorageClass

## Bitnami Thanos image
## ref: https://hub.docker.com/r/bitnami/thanos/tags/
##
image:
  registry: docker.io
  repository: bitnami/thanos
  tag: 0.15.0
  ## Specify a imagePullPolicy. Defaults to 'Always' if image tag is 'latest', else set to 'IfNotPresent'
  ## ref: http://kubernetes.io/docs/user-guide/images/#pre-pulling-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets (secrets must be manually created in the namespace)
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - myRegistryKeySecretName

## String to partially override thanos.fullname template (will maintain the release name)
##
# nameOverride:

## String to fully override thanos.fullname template
##
# fullnameOverride:

## Kubernetes Cluster Domain
##
clusterDomain: cluster.local

## Objstore Configuration
## Specify content for objstore.yml
##
# objstoreConfig: |-
#   type: s3
#   config:
#     bucket: cloud-test-thanos-poc
#     endpoint: s3.us-east-1.amazonaws.com

## Secret with Objstore Configuration
## Note: This will override objstoreConfig
##
# existingObjstoreSecret:
##  optional item list for specifying a custom Secret key. If so, path should be objstore.yml
# existingObjstoreSecretItems: []

## Provide a common service account to be shared with all components
##
# existingServiceAccount: my-service-account

## Thanos Querier parameters
##
querier:
  ## Set to true to enable Thanos Querier component
  ##
  enabled: true

  ## Log level
  ##
  logLevel: info

  ## Provide any additional annotations which may be required
  ##
  serviceAccount:
    annotations: {}
    ## Provide an existing service account for querier
    ##
    # existingServiceAccount: querier-service-account

  ## Labels to treat as a replica indicator along which data is deduplicated
  ##
  replicaLabel: replica

  ## Dinamically configure store APIs using DNS discovery
  ##
  dnsDiscovery:
    enabled: true
    ## Sidecars service name to discover them using DNS discovery
    ## Evaluated as a template.
    sidecarsService: "prometheus-operated"
    ##
    ## Sidecars namespace to discover them using DNS discovery
    ## Evaluated as a template.
    sidecarsNamespace: "{{ .Release.Namespace }}"

  ## Statically configure store APIs to connect with Thanos Querier
  ##
  stores: []
    # - prometheus-operated.prometheus-operator:10901

  ## Querier Service Discovery Configuration
  ## Specify content for servicediscovery.yml
  ##
  # sdConfig:

  ## ConfigMap with Querier Service Discovery Configuration
  ## NOTE: This will override querier.sdConfig
  ##
  # existingSDConfigmap:

  ## Extra Flags to passed to Thanos Querier
  ##
  extraFlags: []

  ## Number of Thanos Querier replicas to deploy
  ##
  replicaCount: 2

  ## StrategyType, can be set to RollingUpdate or Recreate by default.
  ##
  strategyType: RollingUpdate

  ## Affinity for pod assignment
  ## Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ##
  affinity:
    podAntiAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - key: app.kubernetes.io/component
              operator: In
              values:
              - querier
          topologyKey: kubernetes.io/hostname
    nodeAffinity:
      preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 1
        preference:
          matchExpressions:
          - key: "kops.k8s.io/instancegroup"
            operator: In
            values:
            - nodes-utilities

  tolerations:
  - key: "utilities"
    operator: "Equal"
    value: "true"
    effect: "NoSchedule"



  ## Node labels for pod assignment. Evaluated as a template.
  ## ref: https://kubernetes.io/docs/user-guide/node-selection/
  ##
  nodeSelector: {}

  ## Annotations for querier pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}

  ## Pod priority
  ## ref: https://kubernetes.io/docs/concepts/configuration/pod-priority-preemption/
  ##
  # priorityClassName: ""

  ## K8s Security Context for Thanos Querier pods
  ## https://kubernetes.io/docs/tasks/configure-pod-container/security-context/
  ##
  securityContext:
    enabled: true
    fsGroup: 1001
    runAsUser: 1001

  ## Thanos Querier containers' resource requests and limits
  ## ref: http://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources:
    # We usually recommend not to specify default resources and to leave this as a conscious
    # choice for the user. This also increases chances charts run on environments with little
    # resources, such as Minikube. If you do want to specify resources, uncomment the following
    # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
    limits:
      cpu: "1"
      memory: 512Mi
    requests:
      cpu: 50m
      memory: 128Mi

  ## Thanos Querier pods' liveness and readiness probes. Evaluated as a template.
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#container-probes
  ##
  livenessProbe:
    httpGet:
      path: /-/healthy
      port: http
    initialDelaySeconds: 30
    timeoutSeconds: 30
    # periodSeconds: 10
    # successThreshold: 1
    # failureThreshold: 6
  readinessProbe:
    httpGet:
      path: /-/ready
      port: http
    initialDelaySeconds: 30
    timeoutSeconds: 30
    # periodSeconds: 10
    # successThreshold: 1
    # failureThreshold: 6

  ## Thanos Querier GRPC TLS parameters
  ## to configure --grpc-server-tls-cert, --grpc-server-tls-key, --grpc-server-tls-client-ca, --grpc-client-tls-secure, --grpc-client-tls-cert, --grpc-client-tls-key, --grpc-client-tls-ca, --grpc-client-server-name
  ## ref: https://github.com/thanos-io/thanos/blob/master/docs/components/query.md#flags
  grpcTLS:
    # TLS server side
    server:
      # Enable TLS for GRPC server
      secure: false
      # TLS Certificate for gRPC server, leave blank to disable TLS
      cert:
      # TLS Key for the gRPC server, leave blank to disable TLS
      key:
      # TLS CA to verify clients against. If no client CA is specified, there is no client verification on server side. (tls.NoClientCert)
      ca:
    # TLS client side
    client:
      # Use TLS when talking to the gRPC server
      secure: false
      # TLS Certificates to use to identify this client to the server
      cert:
      # TLS Key for the client's certificate
      key:
      # TLS CA Certificates to use to verify gRPC servers
      ca:
      # Server name to verify the hostname on the returned gRPC certificates. See https://tools.ietf.org/html/rfc4366#section-3.1
      servername:

  ## Service paramaters
  ##
  service:
    ## Service type
    ##
    # type: ClusterIP
    # type: ClusterIP
    type: LoadBalancer
    ## Thanos Querier service clusterIP IP
    ##
    # clusterIP: None
    ## HTTP Port
    ##
    http:
      port: 9090
      ## Specify the nodePort value for the LoadBalancer and NodePort service types.
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
      ##
      # nodePort:
    ## GRPC Port
    ##
    grpc:
      port: 10901
      ## Specify the nodePort value for the LoadBalancer and NodePort service types.
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport
      ##
      # nodePort:
    ## Set the LoadBalancer service type to internal only.
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#internal-load-balancer
    ##
    # loadBalancerIP:
    ## Load Balancer sources
    ## https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ##
    # loadBalancerSourceRanges:
    # - 10.10.10.0/24
    ## Provide any additional annotations which may be required
    ##
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
      service.beta.kubernetes.io/aws-load-balancer-internal: 0.0.0.0/0
      service.beta.kubernetes.io/aws-load-balancer-type: nlb

  ## Autoscaling parameters
  ##
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 8
    targetCPU: 50
    targetMemory: 50

  ## Querier Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb/
  ##
  pdb:
    create: false
    ## Min number of pods that must still be available after the eviction
    ##
    minAvailable: 1
    ## Max number of pods that can be unavailable after the eviction
    ##
    # maxUnavailable: 1

  ## Configure the ingress resource that allows you to access Thanos Querier
  ## ref: http://kubernetes.io/docs/user-guide/ingress/
  ##
  ingress:
    ## Set to true to enable ingress record generation
    ##
    enabled: true

    ## Set this to true in order to add the corresponding annotations for cert-manager
    ##
    certManager: false

    ## When the ingress is enabled, a host pointing to this will be created
    ##
    # hostname: thanos.local
    hostname: example.thanos.com

    ## Ingress annotations done as key:value pairs
    ## For a full list of possible ingress annotations, please see
    ## ref: https://github.com/kubernetes/ingress-nginx/blob/master/docs/user-guide/nginx-configuration/annotations.md
    ##
    ## If certManager is set to true, annotation kubernetes.io/tls-acme: "true" will automatically be set
    ##
    annotations:
      kubernetes.io/ingress.class: nginx-controller

    ## The list of additional hostnames to be covered with this ingress record.
    ## Most likely the hostname above will be enough, but in the event more hosts are needed, this is an array
    ## extraHosts:
    ## - name: thanos.local
    ##   path: /

    ## The tls configuration for additional hostnames to be covered with this ingress record.
    ## see: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
    ## extraTls:
    ## - hosts:
    ##     - thanos.local
    ##   secretName: thanos.local-tls

    ## If you're providing your own certificates, please use this to add the certificates as secrets
    ## key and certificate should start with -----BEGIN CERTIFICATE----- or
    ## -----BEGIN RSA PRIVATE KEY-----
    ##
    ## name should line up with a tlsSecret set further up
    ## If you're using cert-manager, this is unneeded, as it will create the secret for you if it is not set
    ##
    ## It is also possible to create and manage the certificates outside of this helm chart
    ## Please see README.md for more information
    ##
    secrets: []
    ## - name: thanos.local-tls
    ##   key:

    ## Create an ingress object for the GRPC service. This requires an HTTP/2
    ## capable Ingress controller (eg. traefik using AWS NLB). Example annotations
    ## - ingress.kubernetes.io/protocol: h2c
    ## - service.beta.kubernetes.io/aws-load-balancer-type: nlb
    ## - service.beta.kubernetes.io/aws-load-balancer-backend-protocol: tcp
    ## For more information see https://kubernetes.io/docs/concepts/cluster-administration/cloud-providers/
    ## and also the documentation for your ingress controller.
    ##
    ## The options that are accepted are identical to the HTTP one listed above
    grpc:
      enabled: true
      certManager: false
      hostname: example-grpc.thanos.com
      annotations: {}
      ## - hosts:
      ##     - thanos.local
      ##   secretName: thanos-grpc.local-tls

      ## extraHosts:
      ## - name: thanos-grpc.local
      ##   path: /

      ## extraTls:
      ## - hosts:
      ##     - thanos-grpc.local
      ##   secretName: thanos-grpc.local-tls

      secrets: []
      ## - name: thanos-grpc.local-tls
      ##   key:
      ##   certificate:

## Thanos Bucket Web parameters
##
bucketweb:
  ## Set to true to enable Thanos Bucket Web component
  ##
  enabled: false


## Thanos Compactor parameters
##
compactor:
  ## Set to true to enable Thanos Compactor component
  ##
  enabled: false



## Thanos Store Gateway parameters
##
storegateway:
  ## Set to true to enable Thanos Store Gateway component
  ##
  enabled: false


## Thanos Ruler parameters
##
ruler:
  ## Set to true to enable Thanos Ruler component
  ##
  enabled: false


## Prometheus metrics
##
metrics:
  enabled: true

  ## Prometheus Operator ServiceMonitor configuration
  ##
  serviceMonitor:
    enabled: false
    ## Namespace in which Prometheus is running
    ##
    namespace: prometheus
    ## Labels to add to the ServiceMonitor object
    ##
    # labels:
    ## Interval at which metrics should be scraped.
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ##
    # interval: 10s
    ## Timeout after which the scrape is ended
    ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
    ##
    # scrapeTimeout: 10s

## Init Container paramaters
## Change the owner and group of the persistent volume(s) mountpoint(s) to 'runAsUser:fsGroup' on each component
## values from the securityContext section of the component
##
volumePermissions:
  enabled: false


## Minio Chart configuration
##
minio:
  ## Set to true to deploy a MinIO chart
  ## to be used as an objstore for Thanos
  ##
  enabled: false
