// Copyright (c) Mattermost, Inc. All Rights Reserved.
// See LICENSE.txt for license information.
//
// Code generated by MockGen. DO NOT EDIT.
// Source: github.com/mattermost/mattermost-cloud/internal/supervisor (interfaces: AWATClient)

// Package mocks is a generated GoMock package.
package mocks

import (
	gomock "github.com/golang/mock/gomock"
	model "github.com/mattermost/awat/model"
	reflect "reflect"
)

// MockAWATClient is a mock of AWATClient interface
type MockAWATClient struct {
	ctrl     *gomock.Controller
	recorder *MockAWATClientMockRecorder
}

// MockAWATClientMockRecorder is the mock recorder for MockAWATClient
type MockAWATClientMockRecorder struct {
	mock *MockAWATClient
}

// NewMockAWATClient creates a new mock instance
func NewMockAWATClient(ctrl *gomock.Controller) *MockAWATClient {
	mock := &MockAWATClient{ctrl: ctrl}
	mock.recorder = &MockAWATClientMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockAWATClient) EXPECT() *MockAWATClientMockRecorder {
	return m.recorder
}

// CompleteImport mocks base method
func (m *MockAWATClient) CompleteImport(arg0 *model.ImportCompletedWorkRequest) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CompleteImport", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// CompleteImport indicates an expected call of CompleteImport
func (mr *MockAWATClientMockRecorder) CompleteImport(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CompleteImport", reflect.TypeOf((*MockAWATClient)(nil).CompleteImport), arg0)
}

// CreateTranslation mocks base method
func (m *MockAWATClient) CreateTranslation(arg0 *model.TranslationRequest) (*model.TranslationStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateTranslation", arg0)
	ret0, _ := ret[0].(*model.TranslationStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateTranslation indicates an expected call of CreateTranslation
func (mr *MockAWATClientMockRecorder) CreateTranslation(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateTranslation", reflect.TypeOf((*MockAWATClient)(nil).CreateTranslation), arg0)
}

// GetAllTranslations mocks base method
func (m *MockAWATClient) GetAllTranslations() ([]*model.TranslationStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAllTranslations")
	ret0, _ := ret[0].([]*model.TranslationStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAllTranslations indicates an expected call of GetAllTranslations
func (mr *MockAWATClientMockRecorder) GetAllTranslations() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAllTranslations", reflect.TypeOf((*MockAWATClient)(nil).GetAllTranslations))
}

// GetImportStatus mocks base method
func (m *MockAWATClient) GetImportStatus(arg0 string) (*model.ImportStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetImportStatus", arg0)
	ret0, _ := ret[0].(*model.ImportStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetImportStatus indicates an expected call of GetImportStatus
func (mr *MockAWATClientMockRecorder) GetImportStatus(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetImportStatus", reflect.TypeOf((*MockAWATClient)(nil).GetImportStatus), arg0)
}

// GetImportStatusesByInstallation mocks base method
func (m *MockAWATClient) GetImportStatusesByInstallation(arg0 string) ([]*model.ImportStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetImportStatusesByInstallation", arg0)
	ret0, _ := ret[0].([]*model.ImportStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetImportStatusesByInstallation indicates an expected call of GetImportStatusesByInstallation
func (mr *MockAWATClientMockRecorder) GetImportStatusesByInstallation(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetImportStatusesByInstallation", reflect.TypeOf((*MockAWATClient)(nil).GetImportStatusesByInstallation), arg0)
}

// GetImportStatusesByTranslation mocks base method
func (m *MockAWATClient) GetImportStatusesByTranslation(arg0 string) ([]*model.ImportStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetImportStatusesByTranslation", arg0)
	ret0, _ := ret[0].([]*model.ImportStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetImportStatusesByTranslation indicates an expected call of GetImportStatusesByTranslation
func (mr *MockAWATClientMockRecorder) GetImportStatusesByTranslation(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetImportStatusesByTranslation", reflect.TypeOf((*MockAWATClient)(nil).GetImportStatusesByTranslation), arg0)
}

// GetTranslationReadyToImport mocks base method
func (m *MockAWATClient) GetTranslationReadyToImport(arg0 *model.ImportWorkRequest) (*model.ImportStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTranslationReadyToImport", arg0)
	ret0, _ := ret[0].(*model.ImportStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTranslationReadyToImport indicates an expected call of GetTranslationReadyToImport
func (mr *MockAWATClientMockRecorder) GetTranslationReadyToImport(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTranslationReadyToImport", reflect.TypeOf((*MockAWATClient)(nil).GetTranslationReadyToImport), arg0)
}

// GetTranslationStatus mocks base method
func (m *MockAWATClient) GetTranslationStatus(arg0 string) (*model.TranslationStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTranslationStatus", arg0)
	ret0, _ := ret[0].(*model.TranslationStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTranslationStatus indicates an expected call of GetTranslationStatus
func (mr *MockAWATClientMockRecorder) GetTranslationStatus(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTranslationStatus", reflect.TypeOf((*MockAWATClient)(nil).GetTranslationStatus), arg0)
}

// GetTranslationStatusesByInstallation mocks base method
func (m *MockAWATClient) GetTranslationStatusesByInstallation(arg0 string) ([]*model.TranslationStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetTranslationStatusesByInstallation", arg0)
	ret0, _ := ret[0].([]*model.TranslationStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetTranslationStatusesByInstallation indicates an expected call of GetTranslationStatusesByInstallation
func (mr *MockAWATClientMockRecorder) GetTranslationStatusesByInstallation(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetTranslationStatusesByInstallation", reflect.TypeOf((*MockAWATClient)(nil).GetTranslationStatusesByInstallation), arg0)
}

// ListImports mocks base method
func (m *MockAWATClient) ListImports() ([]*model.ImportStatus, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListImports")
	ret0, _ := ret[0].([]*model.ImportStatus)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// ListImports indicates an expected call of ListImports
func (mr *MockAWATClientMockRecorder) ListImports() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListImports", reflect.TypeOf((*MockAWATClient)(nil).ListImports))
}

// ReleaseLockOnImport mocks base method
func (m *MockAWATClient) ReleaseLockOnImport(arg0 string) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ReleaseLockOnImport", arg0)
	ret0, _ := ret[0].(error)
	return ret0
}

// ReleaseLockOnImport indicates an expected call of ReleaseLockOnImport
func (mr *MockAWATClientMockRecorder) ReleaseLockOnImport(arg0 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ReleaseLockOnImport", reflect.TypeOf((*MockAWATClient)(nil).ReleaseLockOnImport), arg0)
}
