apiVersion: apps/v1
kind: Deployment
metadata:
  name: perseus
  namespace: perseus
spec:
  replicas: 2
  selector:
    matchLabels:
      name: perseus
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        name: perseus
    spec:
      containers:
      - image: mattermost/perseus:v0.0.2
        imagePullPolicy: IfNotPresent
        name: perseus
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        env:
        - name: PERSEUS_LISTENADDRESS
          value: 0.0.0.0:5432
        - name: PERSEUS_METRICSADDRESS
          value: 0.0.0.0:5500
        - name: "PERSEUS_AWSSETTINGS_REGION"
          value: "us-east-1"
        - name: PERSEUS_LOGSETTINGS_JSON
          value: "true"
        - name: PERSEUS_AUTHDBSETTINGS_AUTHDBDSN
          valueFrom:
            secretKeyRef:
              name: perseus
              key: AuthDBSettings_AuthDBDSN
        - name: PERSEUS_AWSSETTINGS_ACCESSKEYID
          valueFrom:
            secretKeyRef:
              name: perseus
              key: AWSSettings_AccessKeyId
        - name: PERSEUS_AWSSETTINGS_SECRETACCESSKEY
          valueFrom:
            secretKeyRef:
              name: perseus
              key: AWSSettings_SecretAccessKey
        - name: PERSEUS_AWSSETTINGS_KMSKEYARN
          valueFrom:
            secretKeyRef:
              name: perseus
              key: AWSSettings_KMSKeyARN
        readinessProbe:
          tcpSocket:
            path: /health
            port: 5500
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /health
            port: 5500
          initialDelaySeconds: 5
          periodSeconds: 3
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
---
apiVersion: v1
kind: Service
metadata:
  name: perseus
  namespace: perseus
  labels:
    kubernetes.io/name: "perseus"
spec:
  internalTrafficPolicy: Cluster
  ipFamilies:
  - IPv4
  ipFamilyPolicy: SingleStack
  ports:
  - name: perseus
    port: 5432
    protocol: TCP
    targetPort: 5432
  - name: metrics
    port: 5500
    protocol: TCP
    targetPort: 5500
  selector:
    name: perseus
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
